apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  creationTimestamp: null
  labels:
    cluster_id: d76b87cd-9683-4dbc-a745-ecf3c33a1af5
    subject: chaos-workflow-sept-23-c1_litmus
    workflow_id: 3b30e00d-7b88-4995-8a79-fe68183cf2c1
    workflows.argoproj.io/controller-instanceid: d76b87cd-9683-4dbc-a745-ecf3c33a1af5
  name: chaos-workflow-sept-23-c1-1632384311
  namespace: litmus
spec:
  arguments:
    parameters:
    - name: adminModeNamespace
      value: litmus
  entrypoint: custom-chaos
  securityContext:
    runAsNonRoot: true
    runAsUser: 1000
  serviceAccountName: argo-chaos
  templates:
  - arguments: {}
    inputs: {}
    metadata: {}
    name: custom-chaos
    outputs: {}
    steps:
    - - arguments: {}
        name: install-chaos-experiments
        template: install-chaos-experiments
    - - arguments: {}
        name: pod-network-latency
        template: pod-network-latency
      - arguments: {}
        name: run-latency-benchmark
        template: run-latency-benchmark
    - - arguments: {}
        name: pod-memory-hog
        template: pod-memory-hog
      - arguments: {}
        name: run-memory-benchmark
        template: run-memory-benchmark
    - - arguments: {}
        name: pod-cpu-hog
        template: pod-cpu-hog
      - arguments: {}
        name: run-cpu-benchmark
        template: run-cpu-benchmark
    - - arguments: {}
        name: pod-delete
        template: pod-delete
      - arguments: {}
        name: run-pod-delete-benchmark
        template: run-pod-delete-benchmark
  - arguments: {}
    container:
      args:
      - kubectl apply -f /tmp/pod-delete.yaml -n {{workflow.parameters.adminModeNamespace}} | kubectl apply -f /tmp/pod-cpu-hog.yaml -n {{workflow.parameters.adminModeNamespace}} | kubectl apply -f /tmp/pod-memory-hog.yaml -n {{workflow.parameters.adminModeNamespace}} | kubectl apply -f /tmp/pod-network-latency.yaml -n {{workflow.parameters.adminModeNamespace}} |  sleep 30
      command:
      - sh
      - -c
      image: litmuschaos/k8s:latest
      name: ""
      resources: {}
    inputs:
      artifacts:
      - name: pod-delete
        path: /tmp/pod-delete.yaml
        raw:
          data: |
            apiVersion: litmuschaos.io/v1alpha1
            description:
              message: |
                Deletes a pod belonging to a deployment/statefulset/daemonset
            kind: ChaosExperiment
            metadata:
              name: pod-delete
              labels:
                name: pod-delete
                app.kubernetes.io/part-of: litmus
                app.kubernetes.io/component: chaosexperiment
                app.kubernetes.io/version: 2.0.0
            spec:
              definition:
                scope: Namespaced
                permissions:
                  - apiGroups:
                      - ""
                      - apps
                      - apps.openshift.io
                      - argoproj.io
                      - batch
                      - litmuschaos.io
                    resources:
                      - deployments
                      - jobs
                      - pods
                      - pods/log
                      - replicationcontrollers
                      - deployments
                      - statefulsets
                      - daemonsets
                      - replicasets
                      - deploymentconfigs
                      - rollouts
                      - pods/exec
                      - events
                      - chaosengines
                      - chaosexperiments
                      - chaosresults
                    verbs:
                      - create
                      - list
                      - get
                      - patch
                      - update
                      - delete
                      - deletecollection
                image: litmuschaos/go-runner:2.0.0
                imagePullPolicy: Always
                args:
                  - -c
                  - ./experiments -name pod-delete
                command:
                  - /bin/bash
                env:
                  - name: TOTAL_CHAOS_DURATION
                    value: "15"
                  - name: RAMP_TIME
                    value: "10"
                  - name: FORCE
                    value: "true"
                  - name: CHAOS_INTERVAL
                    value: "5"
                  - name: PODS_AFFECTED_PERC
                    value: ""
                  - name: LIB
                    value: litmus
                  - name: TARGET_PODS
                    value: ""
                  - name: SEQUENCE
                    value: parallel
                labels:
                  name: pod-delete
                  app.kubernetes.io/part-of: litmus
                  app.kubernetes.io/component: experiment-job
                  app.kubernetes.io/version: 2.0.0
      - name: pod-cpu-hog
        path: /tmp/pod-cpu-hog.yaml
        raw:
          data: |
            apiVersion: litmuschaos.io/v1alpha1
            description:
              message: |
                Injects cpu consumption on pods belonging to an app deployment
            kind: ChaosExperiment
            metadata:
              name: pod-cpu-hog
              labels:
                name: pod-cpu-hog
                app.kubernetes.io/part-of: litmus
                app.kubernetes.io/component: chaosexperiment
                app.kubernetes.io/version: 2.0.0
            spec:
              definition:
                scope: Namespaced
                permissions:
                  - apiGroups:
                      - ""
                      - batch
                      - apps
                      - apps.openshift.io
                      - argoproj.io
                      - litmuschaos.io
                    resources:
                      - jobs
                      - pods
                      - pods/log
                      - events
                      - replicationcontrollers
                      - deployments
                      - statefulsets
                      - daemonsets
                      - replicasets
                      - deploymentconfigs
                      - rollouts
                      - pods/exec
                      - chaosengines
                      - chaosexperiments
                      - chaosresults
                    verbs:
                      - create
                      - list
                      - get
                      - patch
                      - update
                      - delete
                      - deletecollection
                image: litmuschaos/go-runner:2.0.0
                imagePullPolicy: Always
                args:
                  - -c
                  - ./experiments -name pod-cpu-hog
                command:
                  - /bin/bash
                env:
                  - name: TOTAL_CHAOS_DURATION
                    value: "60"
                  - name: CPU_CORES
                    value: "1"
                  - name: PODS_AFFECTED_PERC
                    value: ""
                  - name: RAMP_TIME
                    value: "10"
                  - name: LIB
                    value: litmus
                  - name: LIB_IMAGE
                    value: litmuschaos/go-runner:2.0.0
                  - name: STRESS_IMAGE
                    value: alexeiled/stress-ng:latest-ubuntu
                  - name: CONTAINER_RUNTIME
                    value: docker
                  - name: SOCKET_PATH
                    value: /var/run/docker.sock
                  - name: TARGET_PODS
                    value: ""
                  - name: SEQUENCE
                    value: parallel
                labels:
                  name: pod-cpu-hog
                  app.kubernetes.io/part-of: litmus
                  app.kubernetes.io/component: experiment-job
                  app.kubernetes.io/version: 2.0.0
      - name: pod-memory-hog
        path: /tmp/pod-memory-hog.yaml
        raw:
          data: |
            apiVersion: litmuschaos.io/v1alpha1
            description:
              message: |
                Injects memory consumption on pods belonging to an app deployment
            kind: ChaosExperiment
            metadata:
              name: pod-memory-hog
              labels:
                name: pod-memory-hog
                app.kubernetes.io/part-of: litmus
                app.kubernetes.io/component: chaosexperiment
                app.kubernetes.io/version: 2.0.0
            spec:
              definition:
                scope: Namespaced
                permissions:
                  - apiGroups:
                      - ""
                      - batch
                      - apps
                      - apps.openshift.io
                      - argoproj.io
                      - litmuschaos.io
                    resources:
                      - jobs
                      - pods
                      - pods/log
                      - replicationcontrollers
                      - deployments
                      - statefulsets
                      - daemonsets
                      - replicasets
                      - deploymentconfigs
                      - rollouts
                      - pods/exec
                      - events
                      - chaosengines
                      - chaosexperiments
                      - chaosresults
                    verbs:
                      - create
                      - list
                      - get
                      - patch
                      - update
                      - delete
                      - deletecollection
                image: litmuschaos/go-runner:2.0.0
                imagePullPolicy: Always
                args:
                  - -c
                  - ./experiments -name pod-memory-hog
                command:
                  - /bin/bash
                env:
                  - name: TOTAL_CHAOS_DURATION
                    value: "60"
                  - name: MEMORY_CONSUMPTION
                    value: "500"
                  - name: NUMBER_OF_WORKERS
                    value: "1"
                  - name: PODS_AFFECTED_PERC
                    value: ""
                  - name: RAMP_TIME
                    value: "10"
                  - name: LIB
                    value: litmus
                  - name: LIB_IMAGE
                    value: litmuschaos/go-runner:2.0.0
                  - name: STRESS_IMAGE
                    value: alexeiled/stress-ng:latest-ubuntu
                  - name: CONTAINER_RUNTIME
                    value: docker
                  - name: SOCKET_PATH
                    value: /var/run/docker.sock
                  - name: SEQUENCE
                    value: parallel
                  - name: TARGET_PODS
                    value: ""
                labels:
                  name: pod-memory-hog
                  app.kubernetes.io/part-of: litmus
                  app.kubernetes.io/component: experiment-job
                  app.kubernetes.io/version: 2.0.0
      - name: pod-network-latency
        path: /tmp/pod-network-latency.yaml
        raw:
          data: |
            apiVersion: litmuschaos.io/v1alpha1
            description:
              message: |
                Injects network latency on pods belonging to an app deployment
            kind: ChaosExperiment
            metadata:
              name: pod-network-latency
              labels:
                name: pod-network-latency
                app.kubernetes.io/part-of: litmus
                app.kubernetes.io/component: chaosexperiment
                app.kubernetes.io/version: 2.0.0
            spec:
              definition:
                scope: Namespaced
                permissions:
                  - apiGroups:
                      - ""
                      - batch
                      - apps
                      - apps.openshift.io
                      - argoproj.io
                      - litmuschaos.io
                    resources:
                      - jobs
                      - pods
                      - pods/log
                      - replicationcontrollers
                      - deployments
                      - statefulsets
                      - daemonsets
                      - replicasets
                      - deploymentconfigs
                      - rollouts
                      - pods/exec
                      - events
                      - chaosengines
                      - chaosexperiments
                      - chaosresults
                    verbs:
                      - create
                      - list
                      - get
                      - patch
                      - update
                      - delete
                      - deletecollection
                image: litmuschaos/go-runner:2.0.0
                imagePullPolicy: Always
                args:
                  - -c
                  - ./experiments -name pod-network-latency
                command:
                  - /bin/bash
                env:
                  - name: TARGET_CONTAINER
                    value: ""
                  - name: NETWORK_INTERFACE
                    value: eth0
                  - name: LIB_IMAGE
                    value: litmuschaos/go-runner:2.0.0
                  - name: TC_IMAGE
                    value: gaiadocker/iproute2
                  - name: NETWORK_LATENCY
                    value: "2000"
                  - name: TOTAL_CHAOS_DURATION
                    value: "60"
                  - name: RAMP_TIME
                    value: ""
                  - name: LIB
                    value: litmus
                  - name: PODS_AFFECTED_PERC
                    value: ""
                  - name: TARGET_PODS
                    value: ""
                  - name: CONTAINER_RUNTIME
                    value: docker
                  - name: DESTINATION_IPS
                    value: ""
                  - name: DESTINATION_HOSTS
                    value: ""
                  - name: SOCKET_PATH
                    value: /var/run/docker.sock
                  - name: SEQUENCE
                    value: parallel
                labels:
                  name: pod-network-latency
                  app.kubernetes.io/part-of: litmus
                  app.kubernetes.io/component: experiment-job
                  app.kubernetes.io/version: 2.0.0
    metadata: {}
    name: install-chaos-experiments
    outputs: {}
  - arguments: {}
    container:
      args:
      - -file=/tmp/chaosengine-pod-delete.yaml
      - -saveName=/tmp/engine-name
      image: litmuschaos/litmus-checker:latest
      name: ""
      resources: {}
    inputs:
      artifacts:
      - name: pod-delete
        path: /tmp/chaosengine-pod-delete.yaml
        raw:
          data: |
            apiVersion: litmuschaos.io/v1alpha1
            kind: ChaosEngine
            metadata:
              namespace: "{{workflow.parameters.adminModeNamespace}}"
              generateName: pod-delete
              labels:
                instance_id: c0c43bae-15e8-42dc-ac8e-6d87565b26c1
                workflow_name: chaos-workflow-sept-23-c1-1632384311
            spec:
              appinfo:
                appns: sock-shop
                applabel: name=carts
                appkind: deployment
              jobCleanUpPolicy: retain
              engineState: active
              chaosServiceAccount: litmus-admin
              experiments:
                - name: pod-delete
                  spec:
                    components:
                      env:
                        - name: TOTAL_CHAOS_DURATION
                          value: "90"
                        - name: CHAOS_INTERVAL
                          value: "30"
                        - name: FORCE
                          value: "false"
                        - name: PODS_AFFECTED_PERC
                          value: ""
                    probe:
                      - name: cmdProbeTest
                        type: cmdProbe
                        mode: EOT
                        runProperties:
                          probeTimeout: 5
                          retry: 2
                          interval: 5
                          initialDelaySeconds: 3
                          stopOnFailure: false
                        cmdProbe/inputs:
                          command: kubectl get pods -n litmus -o
                            jsonpath='{.items[?(@.metadata.labels.app==
                            "pod-delete-bench")].metadata.name}' | xargs kubectl logs -n
                            litmus |grep 'Failed request' | tail -1 | tr -dc '0-9'
                          source: inline
                          comparator:
                            type: int
                            criteria: <
                            value: "20"
                      - name: deploymentGateProbe
                        type: cmdProbe
                        mode: EOT
                        runProperties:
                          probeTimeout: 10
                          retry: 0
                          interval: 5
                          initialDelaySeconds: 5
                          stopOnFailure: false
                        cmdProbe/inputs:
                          command: if [ {{.cmdProbeTest.ProbeArtifacts.Register }} -le 20 ] ; then echo
                            "success" ; else kubectl rollout undo deployment.v1.apps/carts
                            -n sock-shop ; fi
                          source: inline
                          comparator:
                            type: string
                            criteria: contains
                            value: success
              annotationCheck: "false"
    metadata:
      labels:
        weight: "10"
    name: pod-delete
    outputs: {}
  - arguments: {}
    container:
      args:
      - kubectl create -f /tmp/bench.yaml -n {{workflow.parameters.adminModeNamespace}}
      command:
      - sh
      - -c
      image: lachlanevenson/k8s-kubectl
      name: ""
      resources: {}
    inputs:
      artifacts:
      - name: run-latency-benchmark
        path: /tmp/bench.yaml
        raw:
          data: |
            apiVersion: batch/v1
            kind: Job
            metadata:
              generateName: latency-bench
              labels:
                app: latency-bench
            spec:
              template:
                metadata:
                  labels:
                    app: latency-bench
                spec:
                  restartPolicy: Never
                  containers:
                    - args:
                        - -c
                        - /go/bin/main -r -c 1 -t 20 -n 10 http://carts.sock-shop/items ;
                          sleep 30 ; /go/bin/main -r -c 1 -t 60 -n 100
                          http://carts.sock-shop/items ; exit 0
                      command:
                        - /bin/sh
                      image: devth/alpine-bench
                      imagePullPolicy: Always
                      name: nginx-bench
    metadata: {}
    name: run-latency-benchmark
    outputs: {}
  - arguments: {}
    container:
      args:
      - kubectl create -f /tmp/bench.yaml -n {{workflow.parameters.adminModeNamespace}}
      command:
      - sh
      - -c
      image: lachlanevenson/k8s-kubectl
      name: ""
      resources: {}
    inputs:
      artifacts:
      - name: run-memory-benchmark
        path: /tmp/bench.yaml
        raw:
          data: |
            apiVersion: batch/v1
            kind: Job
            metadata:
              generateName: memory-bench
              labels:
                app: memory-bench
            spec:
              template:
                metadata:
                  labels:
                    app: memory-bench
                spec:
                  restartPolicy: Never
                  containers:
                    - args:
                        - -c
                        - /go/bin/main -r -c 1 -t 20 -n 10 http://carts.sock-shop/items ;
                          sleep 30 ; /go/bin/main -r -c 1 -t 60 -n 100
                          http://carts.sock-shop/items ; exit 0
                      command:
                        - /bin/sh
                      image: devth/alpine-bench
                      imagePullPolicy: Always
                      name: nginx-bench
    metadata: {}
    name: run-memory-benchmark
    outputs: {}
  - arguments: {}
    container:
      args:
      - kubectl create -f /tmp/bench.yaml -n {{workflow.parameters.adminModeNamespace}}
      command:
      - sh
      - -c
      image: lachlanevenson/k8s-kubectl
      name: ""
      resources: {}
    inputs:
      artifacts:
      - name: run-cpu-benchmark
        path: /tmp/bench.yaml
        raw:
          data: |
            apiVersion: batch/v1
            kind: Job
            metadata:
              generateName: cpu-bench
              labels:
                app: cpu-bench
            spec:
              template:
                metadata:
                  labels:
                    app: cpu-bench
                spec:
                  restartPolicy: Never
                  containers:
                    - args:
                        - -c
                        - /go/bin/main -r -c 1 -t 20 -n 10 http://carts.sock-shop/items ;
                          sleep 30 ; /go/bin/main -r -c 1 -t 60 -n 100
                          http://carts.sock-shop/items ; exit 0
                      command:
                        - /bin/sh
                      image: devth/alpine-bench
                      imagePullPolicy: Always
                      name: nginx-bench
    metadata: {}
    name: run-cpu-benchmark
    outputs: {}
  - arguments: {}
    container:
      args:
      - kubectl create -f /tmp/bench.yaml -n {{workflow.parameters.adminModeNamespace}}
      command:
      - sh
      - -c
      image: lachlanevenson/k8s-kubectl
      name: ""
      resources: {}
    inputs:
      artifacts:
      - name: run-pod-delete-benchmark
        path: /tmp/bench.yaml
        raw:
          data: |
            apiVersion: batch/v1
            kind: Job
            metadata:
              generateName: pod-delete-bench
              labels:
                app: pod-delete-bench
            spec:
              template:
                metadata:
                  labels:
                    app: pod-delete-bench
                spec:
                  restartPolicy: Never
                  containers:
                    - args:
                        - -c
                        - /go/bin/main -r -c 1 -t 20 -n 10 http://carts.sock-shop/items ;
                          sleep 30 ; /go/bin/main -r -c 1 -t 60 -n 100
                          http://carts.sock-shop/items ; exit 0
                      command:
                        - /bin/sh
                      image: devth/alpine-bench
                      imagePullPolicy: Always
                      name: nginx-bench
    metadata: {}
    name: run-pod-delete-benchmark
    outputs: {}
  - arguments: {}
    container:
      args:
      - -file=/tmp/chaosengine-pod-cpu-hog.yaml
      - -saveName=/tmp/engine-name
      image: litmuschaos/litmus-checker:latest
      name: ""
      resources: {}
    inputs:
      artifacts:
      - name: pod-cpu-hog
        path: /tmp/chaosengine-pod-cpu-hog.yaml
        raw:
          data: |
            apiVersion: litmuschaos.io/v1alpha1
            kind: ChaosEngine
            metadata:
              namespace: "{{workflow.parameters.adminModeNamespace}}"
              generateName: pod-cpu-hog
              labels:
                instance_id: 4272dacc-b335-4352-8e19-f1ff17a20ec4
                workflow_name: chaos-workflow-sept-23-c1-1632384311
            spec:
              jobCleanUpPolicy: retain
              engineState: active
              appinfo:
                appns: sock-shop
                applabel: name=carts
                appkind: deployment
              chaosServiceAccount: litmus-admin
              experiments:
                - name: pod-cpu-hog
                  spec:
                    components:
                      env:
                        - name: TOTAL_CHAOS_DURATION
                          value: "60"
                        - name: CPU_CORES
                          value: "1"
                        - name: PODS_AFFECTED_PERC
                          value: ""
                        - name: CONTAINER_RUNTIME
                          value: containerd
                        - name: SOCKET_PATH
                          value: /run/containerd/containerd.sock
                    probe:
                      - name: cmdProbeTest
                        type: cmdProbe
                        mode: EOT
                        runProperties:
                          probeTimeout: 5
                          retry: 2
                          interval: 5
                          initialDelaySeconds: 3
                          stopOnFailure: false
                        cmdProbe/inputs:
                          command: kubectl get pods -n litmus -o
                            jsonpath='{.items[?(@.metadata.labels.app==
                            "cpu-bench")].metadata.name}' | xargs kubectl logs -n litmus
                            |grep 'Failed request' | tail -1 | tr -dc '0-9'
                          source: inline
                          comparator:
                            type: int
                            criteria: <
                            value: "20"
                      - name: deploymentGateProbe
                        type: cmdProbe
                        mode: EOT
                        runProperties:
                          probeTimeout: 10
                          retry: 1
                          interval: 5
                          initialDelaySeconds: 5
                          stopOnFailure: false
                        cmdProbe/inputs:
                          command: if [ {{.cmdProbeTest.ProbeArtifacts.Register }} -le 20 ] ; then echo
                            "success" ; else echo {{.cmdProbeTest.ProbeArtifacts.Register }}
                            ; fi
                          source: inline
                          comparator:
                            type: string
                            criteria: contains
                            value: success
              annotationCheck: "false"
    metadata:
      labels:
        weight: "10"
    name: pod-cpu-hog
    outputs: {}
  - arguments: {}
    container:
      args:
      - -file=/tmp/chaosengine-pod-memory-hog.yaml
      - -saveName=/tmp/engine-name
      image: litmuschaos/litmus-checker:latest
      name: ""
      resources: {}
    inputs:
      artifacts:
      - name: pod-memory-hog
        path: /tmp/chaosengine-pod-memory-hog.yaml
        raw:
          data: |
            apiVersion: litmuschaos.io/v1alpha1
            kind: ChaosEngine
            metadata:
              namespace: "{{workflow.parameters.adminModeNamespace}}"
              generateName: pod-memory-hog
              labels:
                instance_id: 801473f2-bece-4040-bc0f-7dd28e49243f
                workflow_name: chaos-workflow-sept-23-c1-1632384311
            spec:
              appinfo:
                appns: sock-shop
                applabel: name=carts
                appkind: deployment
              jobCleanUpPolicy: retain
              engineState: active
              chaosServiceAccount: litmus-admin
              experiments:
                - name: pod-memory-hog
                  spec:
                    components:
                      env:
                        - name: TOTAL_CHAOS_DURATION
                          value: "60"
                        - name: MEMORY_CONSUMPTION
                          value: "100"
                        - name: PODS_AFFECTED_PERC
                          value: ""
                        - name: CONTAINER_RUNTIME
                          value: containerd
                        - name: SOCKET_PATH
                          value: /run/containerd/containerd.sock
                    probe:
                      - name: cmdProbeTest
                        type: cmdProbe
                        mode: EOT
                        runProperties:
                          probeTimeout: 5
                          retry: 2
                          interval: 5
                          initialDelaySeconds: 3
                          stopOnFailure: false
                        cmdProbe/inputs:
                          command: kubectl get pods -n litmus -o
                            jsonpath='{.items[?(@.metadata.labels.app==
                            "memory-bench")].metadata.name}' | xargs kubectl logs -n litmus
                            |grep 'Failed request' | tail -1 | tr -dc '0-9'
                          source: inline
                          comparator:
                            type: int
                            criteria: <
                            value: "20"
                      - name: deploymentGateProbe
                        type: cmdProbe
                        mode: EOT
                        runProperties:
                          probeTimeout: 10
                          retry: 1
                          interval: 5
                          initialDelaySeconds: 5
                          stopOnFailure: false
                        cmdProbe/inputs:
                          command: if [ {{.cmdProbeTest.ProbeArtifacts.Register }} -le 20 ] ; then echo
                            "success" ; else echo {{.cmdProbeTest.ProbeArtifacts.Register }}
                            ; fi
                          source: inline
                          comparator:
                            type: string
                            criteria: contains
                            value: success
              annotationCheck: "false"
    metadata:
      labels:
        weight: "10"
    name: pod-memory-hog
    outputs: {}
  - arguments: {}
    container:
      args:
      - -file=/tmp/chaosengine-pod-network-latency.yaml
      - -saveName=/tmp/engine-name
      image: litmuschaos/litmus-checker:latest
      name: ""
      resources: {}
    inputs:
      artifacts:
      - name: pod-network-latency
        path: /tmp/chaosengine-pod-network-latency.yaml
        raw:
          data: |
            apiVersion: litmuschaos.io/v1alpha1
            kind: ChaosEngine
            metadata:
              namespace: "{{workflow.parameters.adminModeNamespace}}"
              generateName: pod-network-latency
              labels:
                instance_id: d8d20120-4c99-45a4-8358-42d1efc3f0b9
                workflow_name: chaos-workflow-sept-23-c1-1632384311
            spec:
              jobCleanUpPolicy: retain
              engineState: active
              appinfo:
                appns: sock-shop
                applabel: name=carts
                appkind: deployment
              chaosServiceAccount: litmus-admin
              experiments:
                - name: pod-network-latency
                  spec:
                    components:
                      env:
                        - name: TOTAL_CHAOS_DURATION
                          value: "90"
                        - name: NETWORK_LATENCY
                          value: "1000"
                        - name: CONTAINER_RUNTIME
                          value: containerd
                        - name: SOCKET_PATH
                          value: /run/containerd/containerd.sock
                        - name: PODS_AFFECTED_PERC
                          value: ""
                    probe:
                      - name: cmdProbeTest
                        type: cmdProbe
                        mode: EOT
                        runProperties:
                          probeTimeout: 5
                          retry: 2
                          interval: 5
                          initialDelaySeconds: 3
                          stopOnFailure: false
                        cmdProbe/inputs:
                          command: kubectl get pods -n litmus -o
                            jsonpath='{.items[?(@.metadata.labels.app==
                            "latency-bench")].metadata.name}' | xargs kubectl logs -n litmus
                            |grep 'Failed request' | tail -1 | tr -dc '0-9'
                          source: inline
                          comparator:
                            type: int
                            criteria: <
                            value: "20"
                      - name: deploymentGateProbe
                        type: cmdProbe
                        mode: EOT
                        runProperties:
                          probeTimeout: 10
                          retry: 1
                          interval: 5
                          initialDelaySeconds: 1
                          stopOnFailure: false
                        cmdProbe/inputs:
                          command: if [ {{.cmdProbeTest.ProbeArtifacts.Register }} -le 20 ] ; then echo
                            "success" ; else echo {{.cmdProbeTest.ProbeArtifacts.Register }}
                            ; fi
                          source: inline
                          comparator:
                            type: string
                            criteria: contains
                            value: success
              annotationCheck: "false"
    metadata:
      labels:
        weight: "10"
    name: pod-network-latency
    outputs: {}
status:
  finishedAt: null
  startedAt: null
